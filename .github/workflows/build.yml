name: Build, Test and Deploy OS Maps App

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache-node-modules # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            .cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        run: yarn install --frozen-lockfile
      - name: yarn run build
        run: yarn run build
      - name: Upload build for deploy job
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
  e2e_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1,2,3,4 ]
    environment:
      name: cypress
    steps:
      # frontend
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache-node-modules # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            .cache/Cypress
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # backend
      - name: Checkout backend
        uses: actions/checkout@v3
        with:
          repository: bumbleflies/os_backend.doc.open-space
          path: backend
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'
      - name: Install backend
        run: |
          cd backend
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Install cypress
        run: npx cypress install
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          start: |
            yarn start
            python backend/app.py
          record: true
          parallel: true
          wait-on: 'http://localhost:3000, http://localhost:5000/health'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          OS_AUTH_DOMAIN: ${{ vars.OS_AUTH_DOMAIN }}
          OS_AUTH_AUDIENCE: ${{ vars.OS_AUTH_AUDIENCE }}
          OS_AUTH_TEST_CLIENT_ID: ${{ vars.OS_AUTH_TEST_CLIENT_ID }}
          OS_AUTH_TEST_CLIENT_SECRET: ${{ vars.OS_AUTH_TEST_CLIENT_SECRET }}
  deploy:
    runs-on: ubuntu-latest
    needs:
      - e2e_test
      - build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download build from build job
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Push to build branch
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: build
          FOLDER: build
          # https://github.com/ad-m/github-push-action/issues/96
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message
